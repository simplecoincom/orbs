---
description: >
  Install your Node packages with automated caching and best practices applied.
  Requires lock file.
parameters:
  app-dir:
    default: .
    description: >-
      Path to the directory containing your package.json file. Not needed if
      package.json lives in the root.
    type: string
  cache-path:
    default: ''
    description: >
      By default, this orb will utilize 'npm ci' and cache the '~/.npm'
      directory. Override which path to cache with this parameter.
    type: string
  cache-version:
    default: v1
    description: >-
      Change the default cache version if you need to clear the cache for any
      reason.
    type: string
  include-branch-in-cache-key:
    default: true
    description: |
      If true, this cache bucket will only apply to jobs within the same branch.
    type: boolean
  override-ci-command:
    default: ''
    description: >
      By default, packages will be installed with "npm ci", "yarn install
      --frozen-lockfile" or "yarn install --immutable".

      Optionally supply a custom package installation command, with any
      additional flags needed.
    type: string
  pkg-manager:
    default: npm
    description: Select the default node package manager to use. NPM v5+ Required.
    enum:
      - npm
      - yarn
      - yarn-berry
    type: enum
  slack-notify:
    default: true
    description: |
      If true, it will send notifications to slack. Make sure a context `slack-secrets` exists
    type: boolean
  slack-mention:
    default: '@devops'
    description: |
      A Slack group or user to mention
    type: string
  with-cache:
    default: true
    description: Cache your node packages automatically for faster install times.
    type: boolean
steps:
  - run:
      command: |
        if [ ! -f "package.json" ]; then
          echo
          echo "---"
          echo "Unable to find your package.json file. Did you forget to set the app-dir parameter?"
          echo "---"
          echo
          echo "Current directory: $(pwd)"
          echo
          echo
          echo "List directory: "
          echo
          ls
          exit 1
        fi
      name: Checking for package.json.
      working_directory: <<parameters.app-dir>>
  - when:
      condition: << parameters.with-cache >>
      steps:
        - run:
            command: |
              if [ -f "package-lock.json" ]; then
                echo "Found package-lock.json file, assuming lockfile"
                ln package-lock.json /tmp/node-project-lockfile
              elif [ -f "npm-shrinkwrap.json" ]; then
                echo "Found npm-shrinkwrap.json file, assuming lockfile"
                ln npm-shrinkwrap.json /tmp/node-project-lockfile
              elif [ -f "yarn.lock" ]; then
                echo "Found yarn.lock file, assuming lockfile"
                ln yarn.lock /tmp/node-project-lockfile
              fi
              ln package.json /tmp/node-project-package.json
            name: Determine lockfile
            working_directory: <<parameters.app-dir>>
        - restore_cache:
            keys:
              - >-
                node-deps-{{ arch
                }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                .Branch }}-<</parameters.include-branch-in-cache-key>>{{
                checksum "/tmp/node-project-package.json" }}-{{ checksum
                "/tmp/node-project-lockfile" }}
              - >-
                node-deps-{{ arch
                }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                .Branch }}-<</parameters.include-branch-in-cache-key>>{{
                checksum "/tmp/node-project-package.json" }}-
              - >-
                node-deps-{{ arch
                }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                .Branch }}-<</parameters.include-branch-in-cache-key>>
  - when:
      condition:
        equal:
          - npm
          - << parameters.pkg-manager >>
      steps:
        - run:
            command: |
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
              if [[ ! -z "<< parameters.override-ci-command >>" ]]; then
                echo "Running override package installation command:"
                << parameters.override-ci-command >>
              else
                npm ci
              fi
            name: Installing NPM packages
            working_directory: <<parameters.app-dir>>
        - when:
            condition: << parameters.with-cache >>
            steps:
              - when:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - <<parameters.cache-path>>
              - unless:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - ~/.npm
  - when:
      condition:
        equal:
          - yarn
          - << parameters.pkg-manager >>
      steps:
        - run:
            command: |
              if [[ ! -z "<< parameters.override-ci-command >>" ]]; then
                echo "Running override package installation command:"
                << parameters.override-ci-command >>
              else
                yarn install --frozen-lockfile
              fi
            name: Installing YARN packages
            working_directory: <<parameters.app-dir>>
        - when:
            condition: << parameters.with-cache >>
            steps:
              - when:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - <<parameters.cache-path>>
              - unless:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - <<parameters.app-dir>>/node_modules
  - when:
      condition:
        equal:
          - yarn-berry
          - << parameters.pkg-manager >>
      steps:
        - run:
            command: |
              if [[ ! -z "<< parameters.override-ci-command >>" ]]; then
                echo "Running override package installation command:"
                << parameters.override-ci-command >>
              else
                yarn install --immutable
              fi
            name: Installing YARN packages
            working_directory: <<parameters.app-dir>>
        - when:
            condition: << parameters.with-cache >>
            steps:
              - when:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - <<parameters.cache-path>>
              - unless:
                  condition: << parameters.cache-path >>
                  steps:
                    - save_cache:
                        key: >-
                          node-deps-{{ arch
                          }}-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{
                          .Branch
                          }}-<</parameters.include-branch-in-cache-key>>{{
                          checksum "/tmp/node-project-package.json" }}-{{
                          checksum "/tmp/node-project-lockfile" }}
                        paths:
                          - <<parameters.app-dir>>/.yarn/cache
  - when:
      condition: << parameters.slack-notify >>
      steps:
        - slack/notify:
            event: fail
            mentions: << parameters.slack-mention >>
            template: basic_fail_1
